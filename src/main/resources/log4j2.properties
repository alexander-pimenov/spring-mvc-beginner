name=PropertiesConfig
status=warn
# properties
property.basePath=${sys:catalina.home}/logs/webstore/

### Root logger options ###
rootLogger.level=info
rootLogger.additivity=false
rootLogger.appenderRef.console.ref=ConsoleLogger
rootLogger.appenderRef.rolling.ref=RollingFileLogger
### End root logger options ###

### Direct log messages to stdout ###
appender.console.type=Console
appender.console.name=ConsoleLogger
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
### End direct log messages to stdout ###

### Direct log messages to a log file ###
appender.rolling.type=RollingFile
appender.rolling.name=RollingFileLogger
appender.rolling.fileName=${basePath}performance.log
appender.rolling.filePattern=${basePath}performance-%d{yyyyMMdd}-%i.log.gz
appender.rolling.layout.type=PatternLayout
appender.rolling.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
# Rolling policies
appender.rolling.policies.type=Policies
#
## JVM Start Time Based Trigger
#appender.rolling.policies.start.type=OnStartupTriggeringPolicy
## Rolling file if it's size not less than 1MB
#appender.rolling.policies.start.minSize=1MB
#
## Time Based Trigger
#appender.rolling.policies.time.type=TimeBasedTriggeringPolicy
## Rolling file: for {yyyyMMdd} - once in a day, for {yyyyMMdd HH} - once in an hour
#appender.rolling.policies.time.interval=1
## Rolling interval start from 00:00
#appender.rolling.policies.time.modulate=true
#
# Size Based Trigger - %i is required for filePattern
appender.rolling.policies.size.type=SizeBasedTriggeringPolicy
## Rolling file if it's size grater than 1MB
appender.rolling.policies.size.size=1MB
#
# Rolling strategy
appender.rolling.strategy.type=DefaultRolloverStrategy
# No more than 5 inactive files in a folder
appender.rolling.strategy.max=5
# On rolling .log -> 1.log, 1.log -> 2.log, 5.log -> deleted
appender.rolling.strategy.fileIndex=min
# Delete action for selected strategy
appender.rolling.strategy.delete.type=Delete
appender.rolling.strategy.delete.testMode=true
# Delete all files in ${basePath} with maxDepth
appender.rolling.strategy.delete.basePath=${basePath}
appender.rolling.strategy.delete.maxDepth=1
# Delete files older than 5 days
appender.rolling.strategy.delete.ifLastModified.type=IfLastModified
appender.rolling.strategy.delete.ifLastModified.age=P5D
# Delete files with size > 200KB
appender.rolling.strategy.delete.IfAccumulatedFileSize.type=IfAccumulatedFileSize
appender.rolling.strategy.delete.IfAccumulatedFileSize.exceeds=200KB
### End direct log messages to a log file ###

### Logger for package ###
#logger.my.spring.project.springmvc.controller.name = ControllerPackageLogger
#logger.my.spring.project.springmvc.controller.level = trace
#logger.my.spring.project.springmvc.controller.additivity = false
#logger.my.spring.project.springmvc.controller.appenderRef.console.ref = ConsoleLogger
#logger.my.spring.project.springmvc.controller.appenderRef.rolling.ref = RollingFileLogger
### End logger for package ###